events {}

http {
    # Redireciona HTTP para HTTPS para ambos os domínios
    server {
        listen 80;
        server_name tasks.local;
        return 301 https://$host$request_uri;
    }

    # Definindo o upstream para o balanceamento de carga
    upstream backend {
        server tasks:80;  # Nome do serviço no docker-compose.yml
    }

    # Configuração HTTPS para tasks.local
    server {
        listen 443 ssl;
        server_name tasks.local;

        # Caminho para os certificados
        ssl_certificate /etc/nginx/ssl/localhost.crt;
        ssl_certificate_key /etc/nginx/ssl/localhost.key;

        # Proxy para o upstream (balanceamento de carga)
        location / {
            proxy_pass http://tasks;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
